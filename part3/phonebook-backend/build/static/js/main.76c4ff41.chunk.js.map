{"version":3,"sources":["utils.js","components/Filter.js","components/Notification.js","components/PersonForm.js","services.js","components/Person.js","components/Persons.js","components/Title.js","App.js","index.js"],"names":["handleChange","func","event","target","value","Filter","props","searchName","setSerachName","onChange","Notification","message","error","className","PersonForm","handleSubmit","newName","setNewName","newNumber","setNewNumber","onSubmit","type","baseUrl","axios","get","then","response","data","newObject","post","id","put","name","delete","Person","person","setPersons","number","onClick","window","confirm","Service","Persons","persons","map","element","length","search","Title","App","useState","setMessage","errorMessage","setErrorMessage","timer","useEffect","preventDefault","setTimeout","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76c4ff41.chunk.js","sourcesContent":["const handleChange = (func) => (event) => {\r\n  func(event.target.value)\r\n}\r\n\r\n\r\nexport { handleChange }\r\n","import { handleChange } from '../utils'\r\n\r\nconst Filter = (props) => {\r\n  const { searchName, setSerachName } = props\r\n\r\n  return (\r\n    <div>\r\n      Filter shown with: <input value={searchName} onChange={handleChange(setSerachName)} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {Filter}","const Notification = ({ message, error = false }) => {\r\n  if (message) {\r\n    if (error) {\r\n      return (\r\n        <div className=\"error\">\r\n          {message}\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className=\"message\">\r\n          {message}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  return null\r\n}\r\n\r\nexport { Notification }\r\n","import { handleChange } from '../utils'\r\n\r\nconst PersonForm = (props) => {\r\n  const { handleSubmit, newName, setNewName, newNumber, setNewNumber } = props\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        name: <input value={newName} onChange={handleChange(setNewName)} />\r\n      </div>\r\n      <div>\r\n        number: <input value={newNumber} onChange={handleChange(setNewNumber)} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">Add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport { PersonForm }\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst query = (name) => {\r\n  const request = axios.get(`${baseUrl}/query/${name}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n\r\nconst delete_ = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  query,\r\n  delete: delete_\r\n}","import Service from '../services'\r\n\r\nconst Person = (props) => {\r\n  const { person, setPersons } = props\r\n\r\n  const handle = () => {\r\n    const message = `Delete ${person.name}`\r\n\r\n    if (window.confirm(message)) {\r\n      Service.delete(person.id)\r\n      Service.getAll().then(data => setPersons(data))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <tr>\r\n      <td>{person.name}</td>\r\n      <td>{person.number}</td>\r\n      <td><button onClick={handle} >Delete</button></td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport { Person }\r\n","import { Person } from './Person'\r\n\r\nconst Persons = (props) => {\r\n  const { persons, searchName, setPersons } = props\r\n\r\n  return (\r\n    <div>\r\n      <table>\r\n        <tbody>\r\n          {\r\n            persons.map((element) => {\r\n              if (searchName.length === 0 || element.name.search(searchName) !== -1) {\r\n                return (\r\n                  <Person key={element.id} person={element} setPersons={setPersons} />\r\n                )\r\n              } else {\r\n                return null\r\n              }\r\n            }\r\n            )\r\n          }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { Persons }","const Title = (props) => {\r\n  return (\r\n    <h2>{props.name}</h2>\r\n  )\r\n}\r\n\r\nexport { Title }\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport { Filter } from './components/Filter'\r\nimport { Notification } from './components/Notification'\r\nimport { PersonForm } from './components/PersonForm'\r\nimport { Persons } from './components/Persons'\r\nimport { Title } from './components/Title'\r\nimport Service from './services'\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [searchName, setSerachName] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  const timer = 3000\r\n\r\n  useEffect(() => {\r\n    Service.getAll().then(data => setPersons(data))\r\n  }, [])\r\n\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    Service.query(newName).then(person => {\r\n      const newObject = {\r\n        'name': newName,\r\n        'number': newNumber,\r\n      }\r\n\r\n      if (person) {\r\n        const message = `${newName} is already added to phonebook, replace the old number with a new one?`\r\n        if (window.confirm(message)) {\r\n          Service.update(person.id, newObject).then(() => {\r\n            Service.getAll().then(data => setPersons(data))\r\n            setMessage(`Added ${newName}`)\r\n            setTimeout(() => setMessage(null), timer)\r\n          }).catch(error => {\r\n            setErrorMessage(error.response.data.error)\r\n            setTimeout(() => setErrorMessage(null), timer)\r\n          })\r\n        }\r\n      } else {\r\n        Service.create(newObject).then(() => {\r\n          Service.getAll().then(data => setPersons(data))\r\n          setNewName('')\r\n          setMessage(`Added ${newName}`)\r\n          setTimeout(() => setMessage(null), timer)\r\n        }).catch(error => {\r\n          setErrorMessage(error.response.data.error)\r\n          setTimeout(() => setErrorMessage(null), timer)\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Title name={'Phonebook'} />\r\n      {\r\n        message &&\r\n        <Notification message={message} />\r\n      }\r\n      {\r\n        errorMessage &&\r\n        <Notification message={errorMessage} error={true} />\r\n      }\r\n      <div>\r\n        <Filter searchName={searchName} setSerachName={setSerachName} />\r\n      </div>\r\n\r\n      <div>\r\n        <Title name={'Add a new'} />\r\n        <PersonForm handleSubmit={handleSubmit}\r\n          newName={newName} setNewName={setNewName}\r\n          newNumber={newNumber} setNewNumber={setNewNumber} />\r\n      </div>\r\n\r\n      <div>\r\n        <Title name={'Numbers'} />\r\n        <Persons persons={persons} searchName={searchName} setPersons={setPersons} />\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App\r\n","import ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}